info(
    desc: "购物车"
    author: "koobe"
    email: "1002219331@qq.com"
)

type CartListReq struct {
    UserId  int64  `path:"userId"`
}

type CartListResp struct {
    Errno  int64  `json:"errno"`
    Data   CartListData   `json:"data"`
    Errmsg string `json:"errmsg"`
}

type CartListData struct {
    CartTotal CartTotal  `json:"cartTotal"`
    CartList  []CartList `json:"cartList"`
}

type CartList struct {
    ID             int64    `json:"id"`
    UserID         int64    `json:"userId"`
    GoodsID        int64    `json:"goodsId"`
    GoodsSn        string   `json:"goodsSn"`
    GoodsName      string   `json:"goodsName"`
    ProductID      int64    `json:"productId"`
    Price          int64    `json:"price"`
    Number         int64    `json:"number"`
    Specifications []string `json:"specifications"`
    Checked        bool     `json:"checked"`
    PicURL         string   `json:"picUrl"`
    AddTime        string     `json:"addTime"`
    UpdateTime     string     `json:"updateTime"`
    Deleted        bool     `json:"deleted"`
}

type CartTotal struct {
    GoodsCount         int64 `json:"goodsCount"`
    CheckedGoodsCount  int64 `json:"checkedGoodsCount"`
    GoodsAmount        int64 `json:"goodsAmount"`
    CheckedGoodsAmount int64 `json:"checkedGoodsAmount"`
}

type CartAddReq struct {
    IsDeleted      bool   `json:"IS_DELETED"`
    NotDeleted     bool   `json:"NOT_DELETED"`
    ID             int64  `json:"id"`
    UserID         int64  `json:"userId"`
    GoodsID        int64  `json:"goodsId"`
    GoodsSn        string `json:"goodsSn"`
    GoodsName      string `json:"goodsName"`
    ProductID      int64  `json:"productId"`
    Price          string `json:"price"`
    Number         string `json:"number"`
    Specifications string `json:"specifications"`
    Checked        bool   `json:"checked"`
    PicURL         string `json:"picUrl"`
    AddTime        string `json:"addTime"`
    UpdateTime     string `json:"updateTime"`
    Deleted        bool   `json:"deleted"`
}
type CartAddResp struct {
    Errno  int64  `json:"errno"`
    Errmsg string `json:"errmsg"`
}

type CartFastAddReq struct {
    IsDeleted      bool   `json:"IS_DELETED"`
    NotDeleted     bool   `json:"NOT_DELETED"`
    ID             int64  `json:"id"`
    UserID         int64  `json:"userId"`
    GoodsID        int64  `json:"goodsId"`
    GoodsSn        string `json:"goodsSn"`
    GoodsName      string `json:"goodsName"`
    ProductID      int64  `json:"productId"`
    Price          string `json:"price"`
    Number         string `json:"number"`
    Specifications string `json:"specifications"`
    Checked        bool   `json:"checked"`
    PicURL         string `json:"picUrl"`
    AddTime        string `json:"addTime"`
    UpdateTime     string `json:"updateTime"`
    Deleted        bool   `json:"deleted"`
}
type CartFastAddResp struct {
    Errno  int64   `json:"errno"`
    Data   []CartFastAddData `json:"data"`
    Errmsg string  `json:"errmsg"`
}

type CartFastAddData struct {

}

type CartCheckedReq struct {
    UserID        int64  `json:"userId"`
    ProductIds     []int64  `json:"productIds"`
    IsChecked     int64  `json:"isChecked"`
}

type CartCheckOutReq struct {

    UserID        int64  `json:"userId"`
    ProductIds     []int64  `json:"productIds"`
}
type CartCheckOutResp struct {
    Errno  int64  `json:"errno"`
    Data   CartCheckOutData   `json:"data"`
    Errmsg string `json:"errmsg"`
}

type CartCheckOutData struct {
    CheckedAddress   CheckedAddress     `json:"checkedAddress"`
    ActualPrice      int64              `json:"actualPrice"`
    OrderTotalPrice  int64              `json:"orderTotalPrice"`
    CartID           int64              `json:"cartId"`
    FreightPrice     int64              `json:"freightPrice"`
    CheckedGoodsList []CheckedGoodsList `json:"checkedGoodsList"`
    GoodsTotalPrice  int64              `json:"goodsTotalPrice"`
    AddressID        int64              `json:"addressId"`
}

type CheckedAddress struct {
    ID int64 `json:"id"`
}

type CheckedGoodsList struct {
    ID             int64    `json:"id"`
    UserID         int64    `json:"userId"`
    GoodsID        int64    `json:"goodsId"`
    GoodsSn        string   `json:"goodsSn"`
    GoodsName      string   `json:"goodsName"`
    ProductID      int64    `json:"productId"`
    Price          int64    `json:"price"`
    Number         int64    `json:"number"`
    Specifications []string `json:"specifications"`
    Checked        bool     `json:"checked"`
    PicURL         string   `json:"picUrl"`
    AddTime        string     `json:"addTime"`
    UpdateTime     string     `json:"updateTime"`
    Deleted        bool     `json:"deleted"`
}

type CartDeleteReq struct {
    UserId int64 `json:"userId"`
    ProductIds []int64 `json:"productIds"`
}

type CartUpdateReq struct {
    IsDeleted      bool   `json:"IS_DELETED"`
    NotDeleted     bool   `json:"NOT_DELETED"`
    ID             int64  `json:"id"`
    UserID         int64  `json:"userId"`
    GoodsID        int64  `json:"goodsId"`
    GoodsSn        string `json:"goodsSn"`
    GoodsName      string `json:"goodsName"`
    ProductID      int64  `json:"productId"`
    Price          string `json:"price"`
    Number         string `json:"number"`
    Specifications string `json:"specifications"`
    Checked        bool   `json:"checked"`
    PicURL         string `json:"picUrl"`
    AddTime        string `json:"addTime"`
    UpdateTime     string `json:"updateTime"`
    Deleted        bool   `json:"deleted"`
}
type CartUpdateResp struct {
    Errno  int64  `json:"errno"`
    Errmsg string `json:"errmsg"`
}

@server(
//    jwt: Auth
    group: cart
    prefix: /api/cart
)
service front-api {

    @handler CartList
    get /index/:userId (CartListReq) returns (CartListResp)

    @handler CartAdd
    get /add (CartAddReq) returns (CartAddResp)

    @handler CartFastAdd
    get /fastadd (CartFastAddReq) returns (CartFastAddResp)

    @handler CartChecked
    get /checked (CartCheckedReq) returns (CartListResp)

    @handler CartCheckOut
    get /checkout (CartCheckOutReq) returns (CartCheckOutResp)

    @handler CartDelete
    get /delete (CartDeleteReq) returns (CartListResp)

    @handler CartUpdate
    get /update (CartUpdateReq) returns (CartUpdateResp)

}
